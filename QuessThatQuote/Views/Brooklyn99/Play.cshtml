@using System.Diagnostics;
@model QuoteViewModel;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    string jsonStringContent = Model.Json;
    Debug.WriteLine(jsonStringContent);
}
<head>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
</head>

<div class="container text-center">
    <h2 class="mb-5">Guess That Quote! - @Model.LeaderboardEntry.GameType Edition</h2>
    <div id="countdown">
        <div id="countdown-number"></div>
        <svg>
            <circle r="18" cx="20" cy="20"></circle>
        </svg>
    </div>
    <p id="round"></p>
    <p id="score" class="mb-5"></p>
    <h5 id="quote" class="mb-4"></h5>
    <p id="author" class="mb-4"></p>


    <div class="container">
        <div class="row">
            <div class="col">
                <button id="option1" type="button" class="btn btn-primary btn-lg">A</button>
            </div>
            <div class="col">
                <button id="option2" type="button" class="btn btn-primary btn-lg">B</button>
            </div>
            <div class="w-100"></div>
            <div class="col">
                <button id="option3" type="button" class="btn btn-primary btn-lg">C</button>
            </div>
            <div class="col">
                <button id="option4" type="button" class="btn btn-primary btn-lg">D</button>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/typed.js@2.0.16/dist/typed.umd.js"></script>
    <script type="text/javascript">
        var gameOver = false;
        var countdownNumberEl = document.getElementById('countdown-number');
        var countdown = 10;

        countdownNumberEl.textContent = countdown;

        setInterval(function () {
            if (gameOver) {
                return;
            }
            countdown--;
            if (countdown == 0) {
                end();
            }

            countdownNumberEl.textContent = countdown;
        }, 1000);

        var score = 0;
        var maxRound = 10;
        var currentRound = 0;
        var jsonObject = @Html.Raw(jsonStringContent);


        var authors = [];
        for (let i = 0; i < maxRound; i++) {
            var string = jsonObject[i].character;
            if (!authors.includes(string)) {
                
                
                authors.push(string);
            }
        }

        console.log(authors);


        var quote = jsonObject[currentRound].text;

        if (quote.includes(":")) {
            quote = quote.split(":")[1];
        }
        var author = jsonObject[currentRound].character;


        function updateQuote() {
            quote = jsonObject[currentRound].text;

            if (quote.includes(":")) {
                quote = quote.split(":")[1];
            }
            author = jsonObject[currentRound].character;
        }

        var startIndexTyped = 0;
        var speed = 50;
        var timeout;

        function typeWriter() {

            if (startIndexTyped < quote.length) {
                document.getElementById("quote").innerHTML += quote.charAt(startIndexTyped);
                startIndexTyped++;
                timeout = setTimeout(typeWriter, speed);
            }
        }
        

        function updateDisplay() {
            $('#quote').html("");
            startIndexTyped = 0;

            clearTimeout(timeout);
            typeWriter();
            //$('#author').html(author);

            var selectedNumbers = [];
            selectedNumbers.push(authors.indexOf(author));


            while (selectedNumbers.length < 4) {
                var randomNumber = Math.floor(Math.random() * authors.length);
                if (!selectedNumbers.includes(randomNumber)) {
                    selectedNumbers.push(randomNumber);
                }
            }
            

            var randomNumberList = [];
            let i = 1;
            while (randomNumberList.length < 4) {
                var randomNumber = Math.floor(Math.random() * 4);
                if (!randomNumberList.includes(randomNumber)) {
                    randomNumberList.push(randomNumber);

                    $("#option"+i).html("" + authors[selectedNumbers[randomNumber]]);
                    i++;
                }

            }


            $('#round').html("Round " + (currentRound + 1) + "/" + maxRound);
            $('#score').html("Score " + score);
        }

        function nextRound() {
            if (gameOver) return;
            updateQuote();
            updateDisplay();

        }

        function end() {
            //alert("Game OVER!");
            $('#exampleModal').modal({ backdrop: 'static', keyboard: false });
            $("#exampleModal").modal("show");

            $("#scoreInput").val(score);
            gameOver = true;
        }


        $(document).ready(function () {
            updateDisplay();

            for (let i = 1; i <= 4; i++) {
                $("#option"+i).on("click", function () {
                    var answer = $(this).html();
                    
                    if (answer == author) {
                        score = score + (countdown * 20);
                        
                        countdown = 10;

                        if (currentRound < (maxRound-1)) {
                            currentRound++;
                            nextRound();
                        }else{
                            alert("end");
                            end();
                        }

                    } else {
                        end();
                    }
                });
            }

        });

    </script>
    <script>

    </script>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Save" method="post">

                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Game Over</h5>
                </div>
                <div class="modal-body">
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Display Name</label>

                            <input asp-for="LeaderboardEntry.DisplayName" type="text" class="form-control" name="DisplayName" id="displayName">
                            <input asp-for="LeaderboardEntry.Score" type="hidden" class="form-control" name="Score" id="scoreInput">
                            <input asp-for="LeaderboardEntry.GameType" type="hidden" class="form-control" name="GameType" id="gameType">

                        </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary text-nowrap">Save to leaderboard</button>
                    <a asp-area="" asp-controller="Home" asp-action="Leaderboard" class="btn btn-secondary btn-block ml-1">View Leaderboard</a>
                    <a asp-action="Play" asp-route-game="@Model.LeaderboardEntry.GameType" class="btn btn-secondary btn-block ml-1">Retry</a>
                </div>
            </form>

        </div>
    </div>
</div>